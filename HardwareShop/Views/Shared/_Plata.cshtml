@model HardwareShop.ViewModels.DetaliiComandaViewModel

<link rel="stylesheet" href="~/Content/AdaugaProdus.css" type="text/css" />
<style>
    body {
        background: white;
    }

    .fields {
        grid-template-columns: auto auto;
        justify-content: space-around;
    }

    main {
        background-color: #6DD6FA;
        width: 60%;
        margin-top: -50px;
        margin-bottom: 100px;
    }
</style>
@{
    string eroare = Session["eroarePlata"] as string;
    if (eroare == "Card inexistent")
    {
        <p>Detaliile cardului nu se potrivesc!</p>
    }
    else if (eroare == "Sold insuficient")
    {
        <p>Soldul disponibil este insuficient!</p>
    }

}
<main>
    @using (Html.BeginForm("DetaliiComanda", "Comanda", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
    {
        @Html.ValidationSummary(true, "Please fix the following errors.")
        <div class="fields">
            <div class="field">
                @Html.LabelFor(m => m.card.numeDetinator, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.card.numeDetinator, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.card.numeDetinator, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.card.nrCard, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.card.nrCard, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.card.nrCard, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.card.CVC, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.card.CVC, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.card.CVC, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(m => m.comanda.AdresaJson)
            @Html.HiddenFor(m => m.comanda.FacturaJson)
            @Html.HiddenFor(m => m.comanda.pretComandaJson)
        </div>
        <div class="button">
            <input type="submit" value="Adauga" class="submit btn btn-outline-dark" />
        </div>
    }
</main>
@if (Session["eroarePlata"] == null)
{
    <script>
    document.querySelector("form").addEventListener("submit", function () {
        var adresa = @Html.Raw(Json.Encode(Model.comanda.adresa));
        document.querySelector("input[name='comanda.AdresaJson']").value = JSON.stringify(adresa);
    });
    </script>

}
