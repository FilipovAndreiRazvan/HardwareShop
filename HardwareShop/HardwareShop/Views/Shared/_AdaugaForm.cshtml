@model HardwareShop.Models.AdaugaProdusViewModel
@switch (Model.Produs.CategorieId)
{
    case 1:
        {
            Model.Carcasa.Produs = Model.Produs;
            @Html.HiddenFor(m => m.Carcasa.Id)

            <div class="field">
                @Html.LabelFor(m => m.Carcasa.Format, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.Format, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.Format, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.NrVentilatoare, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.NrVentilatoare, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.NrVentilatoare, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.DeschidereLaterala, new { @class = " col-form-label" })
                <div class="input">
                    @Html.DropDownListFor(m => m.Carcasa.DeschidereLaterala, new List<SelectListItem> { new SelectListItem { Text = "Da", Value = "true" }, new SelectListItem { Text = "Nu", Value = "false" } }, new { @class = "dropdown-item" })
                    @Html.ValidationMessageFor(m => m.Carcasa.DeschidereLaterala, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.TipCarcasa, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.TipCarcasa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.TipCarcasa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.NrLocaseSloturiExtensii, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.NrLocaseSloturiExtensii, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.NrLocaseSloturiExtensii, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.Dimensiune, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.Dimensiune, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.Dimensiune, "", new { @class = "text-danger" })
                    <p>(LungimexLatimexInaltime)</p>
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.Greutate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.Greutate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.Greutate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Carcasa.Culoare, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Carcasa.Culoare, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Carcasa.Culoare, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 2:
        {
            Model.PlacaDeBaza.Produs = Model.Produs;

            @Html.HiddenFor(m => m.PlacaDeBaza.Id)
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.Socket, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.Socket, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.Socket, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.Chipset, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.Chipset, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.Chipset, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.NrSloturiRAM, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.NrSloturiRAM, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.NrSloturiRAM, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.TipRAM, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.TipRAM, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.TipRAM, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.SloturiPCIe, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.SloturiPCIe, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.SloturiPCIe, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.ConectoriSATA, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.ConectoriSATA, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.ConectoriSATA, "", new { @class = "text-danger" })
                </div>
            </div> <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.ConectoriM2, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.ConectoriM2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.ConectoriM2, "", new { @class = "text-danger" })
                </div>
            </div> <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.TipPortUSB, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.TipPortUSB, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.TipPortUSB, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.NrPorturiUSB, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.NrPorturiUSB, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.NrPorturiUSB, "", new { @class = "text-danger" })
                </div>
            </div> <div class="field">
                @Html.LabelFor(m => m.PlacaDeBaza.FormFactor, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaDeBaza.FormFactor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaDeBaza.FormFactor, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 3:
        {
            Model.PlacaVideo.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.PlacaVideo.CapacitateMemorie, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaVideo.CapacitateMemorie, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaVideo.CapacitateMemorie, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaVideo.FrecventaMemorie, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaVideo.FrecventaMemorie, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaVideo.FrecventaMemorie, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaVideo.RezolutieMaxima, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaVideo.RezolutieMaxima, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaVideo.RezolutieMaxima, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacaVideo.SistemRacire, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacaVideo.SistemRacire, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacaVideo.SistemRacire, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 4:
        {
            Model.PlacutaRAM.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.PlacutaRAM.Tip, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacutaRAM.Tip, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacutaRAM.Tip, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacutaRAM.Capacitate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacutaRAM.Capacitate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacutaRAM.Capacitate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacutaRAM.Frecventa, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacutaRAM.Frecventa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacutaRAM.Frecventa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.PlacutaRAM.Module, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.PlacutaRAM.Module, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PlacutaRAM.Module, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 5:
        {
            Model.Procesor.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.Procesor.FrecventaBaza, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.FrecventaBaza, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.FrecventaBaza, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Procesor.FrecventaTurbo, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.FrecventaTurbo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.FrecventaTurbo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Procesor.NrNuclee, new { @class = " col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.NrNuclee, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.NrNuclee, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Procesor.NrThreads, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.NrThreads, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.NrThreads, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Procesor.PutereTermica, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.PutereTermica, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.PutereTermica, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Procesor.Socket, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Procesor.Socket, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Procesor.Socket, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 6:
        {
            Model.Sursa.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.Sursa.Format, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Sursa.Format, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Sursa.Format, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Sursa.Putere, new { @class = " col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Sursa.Putere, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Sursa.Putere, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Sursa.NrVentilatoare, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Sursa.NrVentilatoare, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Sursa.NrVentilatoare, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Sursa.Alimentare, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Sursa.Alimentare, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Sursa.Alimentare, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Sursa.Greutate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Sursa.Greutate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Sursa.Greutate, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 7:
        {
            Model.Stocare.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.Stocare.FormFactor, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.FormFactor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.FormFactor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.Capacitate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.Capacitate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.Capacitate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.TipMemorie, new { @class = " col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.TipMemorie, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.TipMemorie, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.RataTransferCitire, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.RataTransferCitire, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.RataTransferCitire, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.RataTransferScriere, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.RataTransferScriere, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.RataTransferScriere, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.Dimensiune, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.Dimensiune, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.Dimensiune, "", new { @class = "text-danger" })
                    <p>(LungimexLatimexInaltime)</p>
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.Greutate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.Greutate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.Greutate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.LineUp, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.LineUp, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.LineUp, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.TipController, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.TipController, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.TipController, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Stocare.Interfata, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Stocare.Interfata, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Stocare.Interfata, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
    case 8:
        {
            Model.Pasta.Produs = Model.Produs;
            <div class="field">
                @Html.LabelFor(m => m.Pasta.ConductivitateTermica, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Pasta.ConductivitateTermica, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Pasta.ConductivitateTermica, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Pasta.RezistentaTermica, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Pasta.RezistentaTermica, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Pasta.RezistentaTermica, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Pasta.Cantitate, new { @class = "col-form-label" })
                <div class="input">
                    @Html.TextBoxFor(m => m.Pasta.Cantitate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Pasta.Cantitate, "", new { @class = "text-danger" })
                </div>
            </div>
            break;
        }
}
